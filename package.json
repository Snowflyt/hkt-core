{
  "name": "hkt-core",
  "version": "1.0.0",
  "private": true,
  "description": "üçÉ A micro HKT (higher-kinded type) implementation for TypeScript, with type safety elegantly guaranteed.",
  "keywords": [
    "type gymnastics",
    "type level",
    "type safe",
    "generic",
    "generic programming",
    "hkt",
    "higher kinded type",
    "type level programming"
  ],
  "homepage": "https://github.com/Snowflyt/hkt-core",
  "bugs": {
    "url": "https://github.com/Snowflyt/hkt-core/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Snowflyt/hkt-core"
  },
  "license": "MIT",
  "author": "Ge Gao (Snowflyt) <gaoge011022@gmail.com>",
  "type": "module",
  "types": "./index.d.ts",
  "workspaces": [
    "typroof-plugin"
  ],
  "scripts": {
    "prebuild": "npm run clean",
    "build": "tsc --noEmit && cpy \"src/**/*\" dist && rimraf --glob \"dist/**/*.test.ts\" && renamer --find .ts --replace .d.ts \"dist/**\" && replace-in-file \"/^\\s*\\/\\/ eslint-disable-next-line .+$/mg\" \"\" \"dist/**/*.d.ts\" --isRegex && replace-in-file \"/^\\s*\\/\\*\\s+eslint-disable\\s+(\\S+\\s+)?\\*\\/$/mg\" \"\" \"dist/**/*.d.ts\" --isRegex && prettier --log-level=silent --write \"dist/**/*\" --ignore-path !dist/ && cpy package.json dist && json -I -f dist/package.json -e \"delete this.private; delete this.workspaces; delete this.scripts; delete this.devDependencies\" && cpy LICENSE dist && cpy README.md dist",
    "clean": "rimraf dist",
    "format": "prettier --no-error-on-unmatched-pattern --write **/*.{js,ts,json,md} *.{cjs,mjs,cts,mts}",
    "lint": "eslint **/*.{js,ts} *.{cjs,mjs,cts,mts} --no-error-on-unmatched-pattern --report-unused-disable-directives-severity error --max-warnings 0",
    "lint:fix": "eslint --fix **/*.{js,ts} *.{cjs,mjs,cts,mts} --no-error-on-unmatched-pattern --report-unused-disable-directives-severity error --max-warnings 0",
    "prepare": "node -e \"import fs from 'node:fs'; import path from 'node:path'; const hooksDir = path.join(process.cwd(), '.githooks'); const gitHooksDir = path.join(process.cwd(), '.git/hooks'); if (!fs.existsSync(gitHooksDir)) { console.error('Git hooks directory not found, please run this in a git repository.'); process.exit(1); } fs.readdirSync(hooksDir).forEach(file => { const srcFile = path.join(hooksDir, file); const destFile = path.join(gitHooksDir, file); fs.copyFileSync(srcFile, destFile); if (process.platform !== 'win32' && !file.endsWith('.cmd')) { fs.chmodSync(destFile, 0o755); } })\"",
    "test": "tsc --noEmit && typroof"
  },
  "devDependencies": {
    "@typescript-eslint/parser": "^8.31.0",
    "commitlint": "^19.8.0",
    "cpy-cli": "^5.0.0",
    "effect": "^3.14.14",
    "eslint": "^9.25.1",
    "eslint-config-prettier": "^10.1.2",
    "eslint-import-resolver-typescript": "^4.3.4",
    "eslint-plugin-import-x": "^4.11.0",
    "eslint-plugin-jsdoc": "^50.6.11",
    "eslint-plugin-prettier": "^5.2.6",
    "eslint-plugin-sonarjs": "^3.0.2",
    "eslint-plugin-sort-destructure-keys": "^2.0.0",
    "globals": "^16.0.0",
    "json": "^11.0.0",
    "prettier": "^3.5.3",
    "prettier-plugin-packagejson": "^2.5.10",
    "renamer": "^5.0.2",
    "replace-in-file": "^8.3.0",
    "rimraf": "^6.0.1",
    "typescript": "latest",
    "typescript-eslint": "^8.31.0",
    "typroof": "^0.5.1"
  }
}
